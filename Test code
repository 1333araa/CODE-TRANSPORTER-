#include <ESP32Servo.h>
#include <Ps3Controller.h>
#include "driver/ledc.h"


// === Servo Setup ===
static const int servoPin1 = 13;
static const int servoPin2 = 12;
Servo servo1;
Servo servo2;

// === Motor L298N Setup ===
int motor1Pin1 = 27;
int motor1Pin2 = 26;
int enable1Pin = 14;

const int freq = 30000;
const int pwmChannel = 0;
const int resolution = 8;
int dutyCycle = 170; // default power

// === PS3 Setup ===
int player = 0;
int battery = 0;

void notify() {
  // Tombol-tombol biasa tetap

  // === Kontrol Servo 1 dengan Stick Kanan Horizontal ===
  if (abs(Ps3.event.analog_changed.stick.rx) > 2) {
    int angle = map(Ps3.data.analog.stick.rx, -128, 127, 0, 180);
    servo1.write(angle);
    Serial.print("Servo 1 Angle: "); Serial.println(angle);
  }

  // === Kontrol Servo 2 dengan Stick Kanan Vertikal ===
  if (abs(Ps3.event.analog_changed.stick.ry) > 2) {
    int angle = map(Ps3.data.analog.stick.ry, -128, 127, 0, 180);
    servo2.write(angle);
    Serial.print("Servo 2 Angle: "); Serial.println(angle);
  }

  // === Kontrol Motor DC dengan Stick Kiri ===
  if (abs(Ps3.event.analog_changed.stick.ly) > 2) {
    int ly = Ps3.data.analog.stick.ly;
    int speed = map(abs(ly), 0, 127, 0, 255);
    if (ly < 0) {
      digitalWrite(motor1Pin1, HIGH);
      digitalWrite(motor1Pin2, LOW);
    } else {
      digitalWrite(motor1Pin1, LOW);
      digitalWrite(motor1Pin2, HIGH);
    }
    ledcWrite(pwmChannel, speed);
    Serial.print("Motor Speed: "); Serial.println(speed);
  }

  // Baca posisi stick
  if( abs(Ps3.event.analog_changed.stick.lx) + abs(Ps3.event.analog_changed.stick.ly) > 2 ) {
    Serial.print("Moved the left stick: x=");
    Serial.print(Ps3.data.analog.stick.lx);
    Serial.print(" y=");
    Serial.println(Ps3.data.analog.stick.ly);
  }
  if( abs(Ps3.event.analog_changed.stick.rx) + abs(Ps3.event.analog_changed.stick.ry) > 2 ) {
    Serial.print("Moved the right stick: x=");
    Serial.print(Ps3.data.analog.stick.rx);
    Serial.print(" y=");
    Serial.println(Ps3.data.analog.stick.ry);
  }

  // Status baterai tetap
  if( battery != Ps3.data.status.battery ) {
    battery = Ps3.data.status.battery;
    Serial.print("The controller battery is ");
    if( battery == ps3_status_battery_charging ) Serial.println("charging");
    else if( battery == ps3_status_battery_full ) Serial.println("FULL");
    else if( battery == ps3_status_battery_high ) Serial.println("HIGH");
    else if( battery == ps3_status_battery_low ) Serial.println("LOW");
    else if( battery == ps3_status_battery_dying ) Serial.println("DYING");
    else if( battery == ps3_status_battery_shutdown ) Serial.println("SHUTDOWN");
    else Serial.println("UNDEFINED");
  }
}

void onConnect() {
  Serial.println("PS3 Controller Connected.");
}

void setup() {
  Serial.begin(115200);

  // Servo init
  servo1.attach(servoPin1);
  servo2.attach(servoPin2);

  // Motor init
  pinMode(motor1Pin1, OUTPUT);
  pinMode(motor1Pin2, OUTPUT);
  pinMode(enable1Pin, OUTPUT);


  // PS3 init
  Ps3.attach(notify);
  Ps3.attachOnConnect(onConnect);
  Ps3.begin("01:02:03:04:05:06");
  Serial.println("Ready to connect PS3 controller.");
}

void loop() {
  if (!Ps3.isConnected()) return;

  // LED player status update
  Ps3.setPlayer(player);
  player = (player + 1) % 10;
  delay(2000);

  // Tidak perlu sweeping servo di sini jika sudah pakai stick kontrol
}

